/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package org.glehenaff.gestform.view;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import org.glehenaff.gestform.GestForm;
import org.glehenaff.gestform.Utils;
import org.glehenaff.gestform.model.ECF;
import org.glehenaff.gestform.model.Formation;
import org.glehenaff.gestform.model.Resultat;
import org.glehenaff.gestform.model.Stagiaire;

/**
 *
 * @author gwenole
 */
public class Form extends javax.swing.JFrame implements AddStagToForm.Listener, ResTableModel.Listener {

    // Modèle des listes et tableaux, pourrait être remplacé par lst.getModel()
    private final FormListModel lstFormModel;
    private final StagTableModel tblStagModel;
    private final StagTableModel tblStagFormModel;
    private final ECFTableModel tblECFModel;

    // Désactiver les champs textes lorsque l'on les modifie.
    private boolean disabledTextFields = false;

    /**
     * Creates new form Form
     */
    public Form() {
        // Initialisation des variables modèles
        lstFormModel = new FormListModel(GestForm.getFormations());
        tblStagModel = new StagTableModel(GestForm.getStagiaires());
        tblStagFormModel = new StagTableModel();
        tblECFModel = new ECFTableModel();

        // Initialisation de la fenètre
        initComponents();
        super.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        panFooter = new javax.swing.JPanel();
        txtFooter = new javax.swing.JTextField();
        tbpContent = new javax.swing.JTabbedPane();
        panStag = new javax.swing.JPanel();
        panInfoStag = new javax.swing.JPanel();
        panCodeNomStag = new javax.swing.JPanel();
        panNomStag = new javax.swing.JPanel();
        lblNomStag = new javax.swing.JLabel();
        txtNomStag = new javax.swing.JTextField();
        panCodeStag = new javax.swing.JPanel();
        lblCodeStag = new javax.swing.JLabel();
        txtCodeStag = new javax.swing.JTextField();
        panPreBtnStag = new javax.swing.JPanel();
        panPreStag = new javax.swing.JPanel();
        lblPreStag = new javax.swing.JLabel();
        txtPreStag = new javax.swing.JTextField();
        panBtnStag = new javax.swing.JPanel();
        btnSupprStag = new javax.swing.JButton();
        btnAddStag = new javax.swing.JButton();
        panListStag = new javax.swing.JPanel();
        sclStag = new javax.swing.JScrollPane();
        tblStag = new javax.swing.JTable();
        panForm = new javax.swing.JPanel();
        panListForm = new javax.swing.JPanel();
        panLstForm = new javax.swing.JPanel();
        scrlForm = new javax.swing.JScrollPane();
        lstForm = new javax.swing.JList<>();
        panInfoForm = new javax.swing.JPanel();
        panNomForm = new javax.swing.JPanel();
        lblNomForm = new javax.swing.JLabel();
        txtNomForm = new javax.swing.JTextField();
        panStagForm = new javax.swing.JPanel();
        sclStagForm = new javax.swing.JScrollPane();
        tblStagForm = new javax.swing.JTable();
        panStagBtnForm = new javax.swing.JPanel();
        btnStagSupprForm = new javax.swing.JButton();
        btnStagAddForm = new javax.swing.JButton();
        panEcfForm = new javax.swing.JPanel();
        sclEcfForm = new javax.swing.JScrollPane();
        tblEcfForm = new javax.swing.JTable();
        panEcfBtnForm = new javax.swing.JPanel();
        btnEcfSupprForm = new javax.swing.JButton();
        btnEcfResForm = new javax.swing.JButton();
        panEcfAddForm = new javax.swing.JPanel();
        lblEcfNomForm = new javax.swing.JLabel();
        txtEcfNomForm = new javax.swing.JTextField();
        btnEcfAddForm = new javax.swing.JButton();
        panBtnForm = new javax.swing.JPanel();
        btnSupprForm = new javax.swing.JButton();
        btnAddForm = new javax.swing.JButton();
        mnuBar = new javax.swing.JMenuBar();
        mnuFichier = new javax.swing.JMenu();
        itmActualiser = new javax.swing.JMenuItem();
        mnuCli = new javax.swing.JMenuItem();
        itmSep = new javax.swing.JPopupMenu.Separator();
        itmQuitter = new javax.swing.JMenuItem();
        mnuAide = new javax.swing.JMenu();
        itmApropos = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestionnaire de formation");
        setMaximumSize(null);
        setMinimumSize(new java.awt.Dimension(600, 600));
        setPreferredSize(new java.awt.Dimension(750, 600));
        setResizable(false);

        panFooter.setLayout(new javax.swing.BoxLayout(panFooter, javax.swing.BoxLayout.LINE_AXIS));

        txtFooter.setEditable(false);
        txtFooter.setHorizontalAlignment(javax.swing.JTextField.LEFT);
        txtFooter.setText("Gestionnaire de formations");
        txtFooter.setName(""); // NOI18N
        panFooter.add(txtFooter);

        getContentPane().add(panFooter, java.awt.BorderLayout.PAGE_END);

        panStag.setLayout(new java.awt.BorderLayout());

        panInfoStag.setBorder(javax.swing.BorderFactory.createTitledBorder("Donnée d'un stagiaire"));
        panInfoStag.setMinimumSize(new java.awt.Dimension(800, 100));

        panCodeNomStag.setMinimumSize(new java.awt.Dimension(400, 23));
        panCodeNomStag.setPreferredSize(new java.awt.Dimension(580, 30));
        panCodeNomStag.setLayout(new java.awt.GridLayout(1, 2, 100, 0));

        panNomStag.setLayout(new javax.swing.BoxLayout(panNomStag, javax.swing.BoxLayout.LINE_AXIS));

        lblNomStag.setText("Nom :");
        lblNomStag.setPreferredSize(new java.awt.Dimension(75, 15));
        panNomStag.add(lblNomStag);

        txtNomStag.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }
        });
        panNomStag.add(txtNomStag);

        panCodeNomStag.add(panNomStag);

        panCodeStag.setLayout(new javax.swing.BoxLayout(panCodeStag, javax.swing.BoxLayout.LINE_AXIS));

        lblCodeStag.setText("Code :");
        lblCodeStag.setPreferredSize(new java.awt.Dimension(75, 15));
        panCodeStag.add(lblCodeStag);

        txtCodeStag.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }
        });
        panCodeStag.add(txtCodeStag);

        panCodeNomStag.add(panCodeStag);

        panInfoStag.add(panCodeNomStag);

        panPreBtnStag.setPreferredSize(new java.awt.Dimension(580, 30));
        panPreBtnStag.setLayout(new java.awt.GridLayout(1, 2, 100, 0));

        panPreStag.setLayout(new javax.swing.BoxLayout(panPreStag, javax.swing.BoxLayout.LINE_AXIS));

        lblPreStag.setText("Prénom :");
        lblPreStag.setPreferredSize(new java.awt.Dimension(75, 15));
        panPreStag.add(lblPreStag);

        txtPreStag.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                txtStagActionPerformed(null);
            }
        });
        panPreStag.add(txtPreStag);

        panPreBtnStag.add(panPreStag);

        panBtnStag.setLayout(new java.awt.GridLayout(1, 2, 20, 0));

        btnSupprStag.setBackground(new java.awt.Color(242, 222, 222));
        btnSupprStag.setForeground(new java.awt.Color(169, 68, 68));
        btnSupprStag.setText("Supprimer");
        btnSupprStag.setEnabled(false);
        btnSupprStag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprStagActionPerformed(evt);
            }
        });
        panBtnStag.add(btnSupprStag);

        btnAddStag.setBackground(new java.awt.Color(223, 240, 216));
        btnAddStag.setForeground(new java.awt.Color(69, 118, 61));
        btnAddStag.setText("Ajouter");
        btnAddStag.setEnabled(false);
        btnAddStag.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddStagActionPerformed(evt);
            }
        });
        panBtnStag.add(btnAddStag);

        panPreBtnStag.add(panBtnStag);

        panInfoStag.add(panPreBtnStag);

        panStag.add(panInfoStag, java.awt.BorderLayout.CENTER);

        panListStag.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste de stagiaire"));
        panListStag.setPreferredSize(new java.awt.Dimension(550, 430));
        panListStag.setLayout(new java.awt.BorderLayout());

        sclStag.setMaximumSize(new java.awt.Dimension(0, 0));
        sclStag.setMinimumSize(new java.awt.Dimension(0, 0));
        sclStag.setPreferredSize(new java.awt.Dimension(400, 200));

        tblStag.setModel(tblStagModel);
        tblStag.setPreferredSize(new java.awt.Dimension(580, 400));
        tblStag.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                tblStagValueChanged(evt);
            }
        });
        sclStag.setViewportView(tblStag);

        panListStag.add(sclStag, java.awt.BorderLayout.CENTER);

        panStag.add(panListStag, java.awt.BorderLayout.NORTH);

        tbpContent.addTab("Stagiaires", panStag);

        panForm.setLayout(new java.awt.BorderLayout(5, 5));

        panListForm.setBorder(javax.swing.BorderFactory.createTitledBorder("Liste de formation"));
        panListForm.setAlignmentX(0.0F);
        panListForm.setAlignmentY(0.0F);
        panListForm.setLayout(new javax.swing.BoxLayout(panListForm, javax.swing.BoxLayout.Y_AXIS));

        panLstForm.setPreferredSize(new java.awt.Dimension(200, 400));
        panLstForm.setLayout(new javax.swing.BoxLayout(panLstForm, javax.swing.BoxLayout.LINE_AXIS));

        scrlForm.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        scrlForm.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        scrlForm.setMaximumSize(null);
        scrlForm.setMinimumSize(null);
        scrlForm.setPreferredSize(new java.awt.Dimension(400, 323));

        lstForm.setModel(lstFormModel);
        lstForm.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstForm.setVisibleRowCount(20);
        lstForm.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstFormMouseClicked(evt);
            }
        });
        lstForm.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstFormValueChanged(evt);
            }
        });
        scrlForm.setViewportView(lstForm);

        panLstForm.add(scrlForm);

        panListForm.add(panLstForm);

        panForm.add(panListForm, java.awt.BorderLayout.LINE_START);

        panInfoForm.setBorder(javax.swing.BorderFactory.createTitledBorder("Donnée d'une formation"));
        panInfoForm.setLayout(new javax.swing.BoxLayout(panInfoForm, javax.swing.BoxLayout.PAGE_AXIS));

        panNomForm.setMaximumSize(new java.awt.Dimension(99999999, 23));
        panNomForm.setPreferredSize(new java.awt.Dimension(54, 23));
        panNomForm.setLayout(new javax.swing.BoxLayout(panNomForm, javax.swing.BoxLayout.LINE_AXIS));

        lblNomForm.setText("Nom :");
        panNomForm.add(lblNomForm);

        txtNomForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomFormActionPerformed(evt);
            }
        });
        txtNomForm.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                txtNomFormActionPerformed(null);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                txtNomFormActionPerformed(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                txtNomFormActionPerformed(null);
            }
        });
        panNomForm.add(txtNomForm);

        panInfoForm.add(panNomForm);

        panStagForm.setBorder(javax.swing.BorderFactory.createTitledBorder("Stagaires de la formation"));
        panStagForm.setName(""); // NOI18N
        panStagForm.setLayout(new javax.swing.BoxLayout(panStagForm, javax.swing.BoxLayout.PAGE_AXIS));

        sclStagForm.setMinimumSize(new java.awt.Dimension(500, 200));
        sclStagForm.setPreferredSize(new java.awt.Dimension(500, 200));

        tblStagForm.setModel(tblStagFormModel);
        tblStagForm.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                tblFormStagValueChanged(evt);
            }
        });
        sclStagForm.setViewportView(tblStagForm);

        panStagForm.add(sclStagForm);

        btnStagSupprForm.setBackground(new java.awt.Color(242, 222, 222));
        btnStagSupprForm.setForeground(new java.awt.Color(169, 68, 68));
        btnStagSupprForm.setText("Supprimer le stagiaire");
        btnStagSupprForm.setEnabled(false);
        btnStagSupprForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStagSupprFormActionPerformed(evt);
            }
        });
        panStagBtnForm.add(btnStagSupprForm);

        btnStagAddForm.setBackground(new java.awt.Color(223, 240, 216));
        btnStagAddForm.setForeground(new java.awt.Color(69, 118, 61));
        btnStagAddForm.setText("Ajouter le stagiaire");
        btnStagAddForm.setEnabled(false);
        btnStagAddForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnStagAddFormActionPerformed(evt);
            }
        });
        panStagBtnForm.add(btnStagAddForm);

        panStagForm.add(panStagBtnForm);

        panInfoForm.add(panStagForm);

        panEcfForm.setBorder(javax.swing.BorderFactory.createTitledBorder("ECF de la formation"));
        panEcfForm.setMinimumSize(new java.awt.Dimension(500, 200));
        panEcfForm.setPreferredSize(new java.awt.Dimension(500, 200));
        panEcfForm.setLayout(new java.awt.BorderLayout());

        sclEcfForm.setMinimumSize(new java.awt.Dimension(500, 100));
        sclEcfForm.setPreferredSize(new java.awt.Dimension(500, 100));

        tblEcfForm.setModel(tblECFModel);
        tblEcfForm.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent evt) {
                tblFormECFValueChanged(evt);
            }
        });
        sclEcfForm.setViewportView(tblEcfForm);

        panEcfForm.add(sclEcfForm, java.awt.BorderLayout.NORTH);

        panEcfBtnForm.setMinimumSize(new java.awt.Dimension(500, 40));
        panEcfBtnForm.setName(""); // NOI18N
        panEcfBtnForm.setPreferredSize(new java.awt.Dimension(500, 40));
        panEcfBtnForm.setRequestFocusEnabled(false);

        btnEcfSupprForm.setBackground(new java.awt.Color(242, 222, 222));
        btnEcfSupprForm.setForeground(new java.awt.Color(169, 68, 68));
        btnEcfSupprForm.setText("Supprimer l'ECF");
        btnEcfSupprForm.setEnabled(false);
        btnEcfSupprForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEcfSupprFormActionPerformed(evt);
            }
        });
        panEcfBtnForm.add(btnEcfSupprForm);

        btnEcfResForm.setBackground(new java.awt.Color(217, 237, 247));
        btnEcfResForm.setForeground(new java.awt.Color(49, 112, 143));
        btnEcfResForm.setText("Résultats");
        btnEcfResForm.setEnabled(false);
        btnEcfResForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEcfResFormActionPerformed(evt);
            }
        });
        panEcfBtnForm.add(btnEcfResForm);

        panEcfForm.add(panEcfBtnForm, java.awt.BorderLayout.CENTER);

        panEcfAddForm.setLayout(new javax.swing.BoxLayout(panEcfAddForm, javax.swing.BoxLayout.LINE_AXIS));

        lblEcfNomForm.setText("Nom :");
        panEcfAddForm.add(lblEcfNomForm);

        txtEcfNomForm.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent e) {
                txtNomEcfActionPerformed(null);
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                txtNomEcfActionPerformed(null);
            }

            @Override
            public void insertUpdate(DocumentEvent e) {
                txtNomEcfActionPerformed(null);
            }
        });
        panEcfAddForm.add(txtEcfNomForm);

        btnEcfAddForm.setBackground(new java.awt.Color(223, 240, 216));
        btnEcfAddForm.setForeground(new java.awt.Color(69, 118, 61));
        btnEcfAddForm.setText("Ajouter l'ECF");
        btnEcfAddForm.setEnabled(false);
        btnEcfAddForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEcfAddFormActionPerformed(evt);
            }
        });
        panEcfAddForm.add(btnEcfAddForm);

        panEcfForm.add(panEcfAddForm, java.awt.BorderLayout.SOUTH);

        panInfoForm.add(panEcfForm);

        btnSupprForm.setBackground(new java.awt.Color(242, 222, 222));
        btnSupprForm.setForeground(new java.awt.Color(169, 68, 68));
        btnSupprForm.setText("Supprimer la formation");
        btnSupprForm.setEnabled(false);
        btnSupprForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSupprFormActionPerformed(evt);
            }
        });
        panBtnForm.add(btnSupprForm);

        btnAddForm.setBackground(new java.awt.Color(223, 240, 216));
        btnAddForm.setForeground(new java.awt.Color(69, 118, 61));
        btnAddForm.setText("Ajouter une formation");
        btnAddForm.setEnabled(false);
        btnAddForm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFormActionPerformed(evt);
            }
        });
        panBtnForm.add(btnAddForm);

        panInfoForm.add(panBtnForm);

        panForm.add(panInfoForm, java.awt.BorderLayout.CENTER);

        tbpContent.addTab("Formations", panForm);

        getContentPane().add(tbpContent, java.awt.BorderLayout.PAGE_START);

        mnuFichier.setText("Fichier");

        itmActualiser.setText("Actualiser");
        itmActualiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmActualiserActionPerformed(evt);
            }
        });
        mnuFichier.add(itmActualiser);

        mnuCli.setText("Passer en mode console");
        mnuCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuCliActionPerformed(evt);
            }
        });
        mnuFichier.add(mnuCli);
        mnuFichier.add(itmSep);

        itmQuitter.setText("Quitter");
        mnuFichier.add(itmQuitter);

        mnuBar.add(mnuFichier);
        itmQuitter.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmQuitterActionPerformed(evt);
            }
        });

        mnuAide.setText("?");

        itmApropos.setText("A propos");
        itmApropos.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itmAproposActionPerformed(evt);
            }
        });
        mnuAide.add(itmApropos);

        mnuBar.add(mnuAide);

        setJMenuBar(mnuBar);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void itmActualiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itmActualiserActionPerformed
        RefreshData();
    }//GEN-LAST:event_itmActualiserActionPerformed

    // Rafraichir les données
    public void RefreshData() {
        GestForm.RefreshData();
        lstFormModel.set(GestForm.getFormations());
        tblStagModel.set(GestForm.getStagiaires());
        int index = lstForm.getSelectedIndex();
        if (index > -1) {
            Formation f = lstFormModel.getFormation(index);
            RefreshValues(f);
        }
    }

    private void tblStagValueChanged(javax.swing.event.ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }
        ResetStagBtn();
        int index = tblStag.getSelectedRow();
        if (index > -1) {
            Stagiaire s = tblStagModel.getStagiaire(index);
            disabledTextFields = true;
            txtNomStag.setText(s.getNom());
            txtPreStag.setText(s.getPrenom());
            txtCodeStag.setText(s.getCode());
            disabledTextFields = false;
        }
    }

    private void txtStagActionPerformed(java.awt.event.ActionEvent evt) {
        if (disabledTextFields) {
            return;
        }
        int index = tblStag.getSelectedRow();
        if (index > -1) {
            tblStag.clearSelection();
        } else {
            ResetStagBtn();
        }
    }

    // Activer/désactiver les boutons du pannneau stagiaire en fonctions de l'état actuel
    private void ResetStagBtn() {
        int index = tblStag.getSelectedRow();
        if (index > -1) {
            btnAddStag.setEnabled(false);
            btnSupprStag.setEnabled(true);
        } else {
            if (txtNomStag.getText().isEmpty() || txtPreStag.getText().isEmpty() || txtCodeStag.getText().isEmpty()) {
                btnAddStag.setEnabled(false);
            } else {
                btnAddStag.setEnabled(true);
            }
            btnSupprStag.setEnabled(false);
        }
    }

    private void btnEcfAddFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEcfAddFormActionPerformed
        int indexForm = lstForm.getSelectedIndex();
        int indexEcf = tblEcfForm.getSelectedRow();
        if (txtEcfNomForm.getText().isEmpty()) {
            txtFooter.setText("Le champ texte est vide");
            return;
        }
        if (indexEcf > -1) {
            txtFooter.setText("Un ECF est selectionné");
            return;
        }
        if (indexForm == -1) {
            txtFooter.setText("Aucune formation n'est sélectionnée");
            return;
        }
        Formation f = lstFormModel.getFormation(indexForm);
        ECF ecf = new ECF(0, f, txtEcfNomForm.getText());
        ecf = Utils.addToDB(ecf);
        if (ecf != null) {
            tblECFModel.add(ecf);
            tblEcfForm.setRowSelectionInterval(tblECFModel.getRowCount() - 1, tblECFModel.getRowCount() - 1);
            ResetFormBtn();
        } else {
            txtFooter.setText("L'ECF semble déjà exister");
        }

    }//GEN-LAST:event_btnEcfAddFormActionPerformed

    private void txtNomFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomFormActionPerformed
        if (disabledTextFields) {
            return;
        }
        int index = lstForm.getSelectedIndex();
        if (index > -1) {
            lstForm.clearSelection();
        } else {
            ResetFormBtn();
        }
    }//GEN-LAST:event_txtNomFormActionPerformed

    private void lstFormValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstFormValueChanged
        if (evt.getValueIsAdjusting()) {
            return;
        }
        ResetFormBtn();
        int index = lstForm.getSelectedIndex();
        tblStagFormModel.reset();
        tblECFModel.reset();
        if (index > -1) {
            Formation f = lstFormModel.getFormation(index);
            disabledTextFields = true;
            txtNomForm.setText(f.getNom());
            disabledTextFields = false;
            RefreshValues(f);
        }
    }//GEN-LAST:event_lstFormValueChanged

    // Rafraichir les valeurs des tableaux en fonction d'un formation sélectionnée
    private void RefreshValues(Formation f) {
        tblStagFormModel.reset();
        tblECFModel.reset();
        for (Stagiaire s : f.getStagiaires()) {
            tblStagFormModel.add(s);
        }
        for (ECF e : f.getECFs()) {
            tblECFModel.add(e);
        }
    }

    private void tblFormECFValueChanged(javax.swing.event.ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }
        ResetFormBtn();
        int index = tblEcfForm.getSelectedRow();
        if (index > -1) {
            ECF ecf = tblECFModel.getEcf(index);
            disabledTextFields = true;
            txtEcfNomForm.setText(ecf.getNom());
            disabledTextFields = false;
        }
    }

    private void txtNomEcfActionPerformed(java.awt.event.ActionEvent evt) {
        if (disabledTextFields) {
            return;
        }
        int index = tblEcfForm.getSelectedRow();
        if (index > -1) {
            tblEcfForm.clearSelection();
        } else {
            ResetFormBtn();
        }
    }

    private void tblFormStagValueChanged(javax.swing.event.ListSelectionEvent evt) {
        if (evt.getValueIsAdjusting()) {
            return;
        }
        ResetFormBtn();
    }

    private void btnAddFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFormActionPerformed
        int index = lstForm.getSelectedIndex();
        if (txtNomForm.getText().isEmpty()) {
            txtFooter.setText("Le champ texte est vide");
            return;
        }
        if (index > -1) {
            txtFooter.setText("Une formation est selectionnée");
            return;
        }
        Formation f = new Formation(0, txtNomForm.getText());
        f = Utils.addToDB(f);
        if (f != null) {
            lstFormModel.add(f);
            lstForm.setSelectedIndex(lstFormModel.getSize() - 1);
            ResetFormBtn();
        } else {
            txtFooter.setText("La formation semble déjà exister");
        }
    }//GEN-LAST:event_btnAddFormActionPerformed

    private void btnSupprFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprFormActionPerformed
        int index = lstForm.getSelectedIndex();
        if (index == -1) {
            txtFooter.setText("Aucune formation n'est selectionnée");
            return;
        }
        Formation f = lstFormModel.getFormation(index);
        if (Utils.delToDB(f)) {
            lstFormModel.remove(f);
            lstForm.clearSelection();
        } else {
            txtFooter.setText("La formation n'a pas pu être supprimée");
        }
    }//GEN-LAST:event_btnSupprFormActionPerformed

    private void btnStagSupprFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStagSupprFormActionPerformed
        int indexForm = lstForm.getSelectedIndex();
        int indexStag = tblStagForm.getSelectedRow();
        if (indexForm == -1) {
            txtFooter.setText("Aucune formation n'est selectionnée");
            return;
        }
        if (indexStag == -1) {
            txtFooter.setText("Aucun stagiaire n'est selectionné");
            return;
        }
        Formation f = lstFormModel.getFormation(indexForm);
        Stagiaire s = tblStagFormModel.getStagiaire(indexStag);
        if (Utils.delToDB(f, s)) {
            tblStagFormModel.remove(s);
            f.remStagiaire(s);
        } else {
            txtFooter.setText("Le stagiaire n'a pas pu être supprimé de la formation");
        }
    }//GEN-LAST:event_btnStagSupprFormActionPerformed

    private void btnEcfSupprFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEcfSupprFormActionPerformed
        int indexEcf = tblEcfForm.getSelectedRow();
        if (indexEcf == -1) {
            txtFooter.setText("Aucun ECF n'est selectionné");
            return;
        }
        ECF ecf = tblECFModel.getEcf(indexEcf);
        if (Utils.delToDB(ecf)) {
            ecf.getFormation().remECF(ecf);
            tblECFModel.remove(ecf);
        } else {
            txtFooter.setText("Le stagiaire n'a pas pu être supprimé de la formation");
        }
    }//GEN-LAST:event_btnEcfSupprFormActionPerformed

    private void btnAddStagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddStagActionPerformed
        int index = tblStag.getSelectedRow();
        if (txtNomStag.getText().isEmpty() || txtCodeStag.getText().isEmpty()) {
            txtFooter.setText("Il manque le nom du stagiaire");
            return;
        }
        if (txtPreStag.getText().isEmpty()) {
            txtFooter.setText("Il manque le prénom du stagiaire");
            return;
        }
        if (txtCodeStag.getText().isEmpty()) {
            txtFooter.setText("Il manque le code du stagiaire");
            return;
        }
        if (index > -1) {
            txtFooter.setText("Un stagiaire est selectionné");
            return;
        }
        String nom = txtNomStag.getText();
        String prenom = txtPreStag.getText();
        String code = txtCodeStag.getText();
        Stagiaire s = new Stagiaire(0, nom, prenom, code);
        s = Utils.addToDB(s);
        if (s != null) {
            tblStagModel.add(s);
            tblStag.setRowSelectionInterval(tblStagModel.getRowCount() - 1, tblStagModel.getRowCount() - 1);
            ResetFormBtn();
        } else {
            txtFooter.setText("La formation semble déjà exister");
        }
    }//GEN-LAST:event_btnAddStagActionPerformed

    private void btnSupprStagActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSupprStagActionPerformed
        int index = tblStag.getSelectedRow();
        if (index == -1) {
            txtFooter.setText("Aucun stagiaire n'est selectionnée");
            return;
        }
        Stagiaire s = tblStagModel.getStagiaire(index);
        if (Utils.delToDB(s)) {
            tblStagModel.remove(s);
            tblStag.clearSelection();
            for (Formation f : lstFormModel.getFormations()) {
                if (f.getStagiaires().contains(s)) {
                    f.remStagiaire(s);
                }
            }
        } else {
            txtFooter.setText("Le stagiaire n'a pas pu être supprimé");
        }
    }//GEN-LAST:event_btnSupprStagActionPerformed

    private void btnStagAddFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnStagAddFormActionPerformed
        int indexForm = lstForm.getSelectedIndex();
        if (indexForm == -1) {
            txtFooter.setText("Aucune formation n'est selectionnée");
            return;
        }
        Formation f = lstFormModel.getFormation(indexForm);
        List<Formation> formations = lstFormModel.getFormations();
        List<Stagiaire> stagiaires = tblStagModel.getStagiaires();
        List<Stagiaire> dispoStagiaires = Utils.getDispoStagiaires(formations, stagiaires);
        AddStagToForm addStag = new AddStagToForm(this, true, f, dispoStagiaires);
        addStag.addEventListener(this);
        addStag.setVisible(true);
    }//GEN-LAST:event_btnStagAddFormActionPerformed

    private void btnEcfResFormActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEcfResFormActionPerformed
        int indexForm = lstForm.getSelectedIndex();
        if (indexForm == -1) {
            txtFooter.setText("Aucune formation n'est selectionnée");
            return;
        }
        int indexEcf = tblEcfForm.getSelectedRow();
        if (indexEcf == -1) {
            txtFooter.setText("Aucun ECF n'est selectionné");
            return;
        }
        ECF ecf = tblECFModel.getEcf(indexEcf);
        Formation f = lstFormModel.getFormation(indexForm);
        List<Stagiaire> stagiaires = f.getStagiaires();
        AddResultatToECF addRes = new AddResultatToECF(this, true, stagiaires, ecf);
        addRes.getTblResModel().addEventListener(this);
        addRes.setVisible(true);
    }//GEN-LAST:event_btnEcfResFormActionPerformed

    private void mnuCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuCliActionPerformed
        this.setVisible(false);
        this.dispose();
        GestForm.RefreshData();
        GestForm.cli();
    }//GEN-LAST:event_mnuCliActionPerformed

    private void lstFormMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstFormMouseClicked
        if (evt.getClickCount() == 2) {
            int index = lstForm.getSelectedIndex();
            if (index > -1) {
                Formation f = lstFormModel.getFormation(index);
                String nom = (String)JOptionPane.showInputDialog(this,"Complete the sentence:\n", "Customized Dialog", JOptionPane.PLAIN_MESSAGE, null, null, f.getNom());
                f.setNom(nom);
                Utils.upToDB(f);
                txtNomForm.setText(nom);
            }
        }
    }//GEN-LAST:event_lstFormMouseClicked

    // Activer/désactiver les boutons du pannneau formation en fonctions de l'état actuel
    private void ResetFormBtn() {
        int index = lstForm.getSelectedIndex();
        if (index > -1) {
            txtEcfNomForm.setEnabled(true);
            if (txtEcfNomForm.getText().isEmpty() || tblEcfForm.getSelectedRow() > -1) {
                btnEcfAddForm.setEnabled(false);
            } else {
                btnEcfAddForm.setEnabled(true);
            }
            btnStagAddForm.setEnabled(true);
            if (tblEcfForm.getSelectedRow() > -1) {
                btnEcfSupprForm.setEnabled(true);
                btnEcfResForm.setEnabled(true);
            } else {
                btnEcfSupprForm.setEnabled(false);
                btnEcfResForm.setEnabled(false);
            }
            if (tblStagForm.getSelectedRow() > -1) {
                btnStagSupprForm.setEnabled(true);
            } else {
                btnStagSupprForm.setEnabled(false);
            }
            btnAddForm.setEnabled(false);
            btnSupprForm.setEnabled(true);
        } else {
            if (txtNomForm.getText().isEmpty()) {
                btnAddForm.setEnabled(false);
            } else {
                btnAddForm.setEnabled(true);
            }
            btnSupprForm.setEnabled(false);
            txtEcfNomForm.setEnabled(false);
            btnEcfAddForm.setEnabled(false);
            btnStagAddForm.setEnabled(false);
            btnEcfSupprForm.setEnabled(false);
            btnEcfResForm.setEnabled(false);
            btnStagSupprForm.setEnabled(false);
        }
    }

    private void itmAproposActionPerformed(java.awt.event.ActionEvent evt) {
        Apropos aPropos = new Apropos(this, true);
        aPropos.setVisible(true);
    }

    private void itmQuitterActionPerformed(java.awt.event.ActionEvent evt) {
        setVisible(false);
        dispose();
    }

    @Override
    public void onStagAddedToForm(Formation formation, Stagiaire stagiaire) {
        int index = lstForm.getSelectedIndex();
        if (index > -1) {
            Formation f = lstFormModel.getFormation(index);
            if (f.equals(formation)) {
                tblStagFormModel.add(stagiaire);
            }
        }
    }

    @Override
    public void onUpdatedResultat(ECF ecf, Resultat res) {
        int index = lstForm.getSelectedIndex();
        if (index > -1) {
            Formation f = lstFormModel.getFormation(index);
            if (ecf.getFormation().equals(f)) {
                tblECFModel.fireTableDataChanged();
            }
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddForm;
    private javax.swing.JButton btnAddStag;
    private javax.swing.JButton btnEcfAddForm;
    private javax.swing.JButton btnEcfResForm;
    private javax.swing.JButton btnEcfSupprForm;
    private javax.swing.JButton btnStagAddForm;
    private javax.swing.JButton btnStagSupprForm;
    private javax.swing.JButton btnSupprForm;
    private javax.swing.JButton btnSupprStag;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JMenuItem itmActualiser;
    private javax.swing.JMenuItem itmApropos;
    private javax.swing.JMenuItem itmQuitter;
    private javax.swing.JPopupMenu.Separator itmSep;
    private javax.swing.JLabel lblCodeStag;
    private javax.swing.JLabel lblEcfNomForm;
    private javax.swing.JLabel lblNomForm;
    private javax.swing.JLabel lblNomStag;
    private javax.swing.JLabel lblPreStag;
    private javax.swing.JList<String> lstForm;
    private javax.swing.JMenu mnuAide;
    private javax.swing.JMenuBar mnuBar;
    private javax.swing.JMenuItem mnuCli;
    private javax.swing.JMenu mnuFichier;
    private javax.swing.JPanel panBtnForm;
    private javax.swing.JPanel panBtnStag;
    private javax.swing.JPanel panCodeNomStag;
    private javax.swing.JPanel panCodeStag;
    private javax.swing.JPanel panEcfAddForm;
    private javax.swing.JPanel panEcfBtnForm;
    private javax.swing.JPanel panEcfForm;
    private javax.swing.JPanel panFooter;
    private javax.swing.JPanel panForm;
    private javax.swing.JPanel panInfoForm;
    private javax.swing.JPanel panInfoStag;
    private javax.swing.JPanel panListForm;
    private javax.swing.JPanel panListStag;
    private javax.swing.JPanel panLstForm;
    private javax.swing.JPanel panNomForm;
    private javax.swing.JPanel panNomStag;
    private javax.swing.JPanel panPreBtnStag;
    private javax.swing.JPanel panPreStag;
    private javax.swing.JPanel panStag;
    private javax.swing.JPanel panStagBtnForm;
    private javax.swing.JPanel panStagForm;
    private javax.swing.JScrollPane sclEcfForm;
    private javax.swing.JScrollPane sclStag;
    private javax.swing.JScrollPane sclStagForm;
    private javax.swing.JScrollPane scrlForm;
    private javax.swing.JTable tblEcfForm;
    private javax.swing.JTable tblStag;
    private javax.swing.JTable tblStagForm;
    private javax.swing.JTabbedPane tbpContent;
    private javax.swing.JTextField txtCodeStag;
    private javax.swing.JTextField txtEcfNomForm;
    private javax.swing.JTextField txtFooter;
    private javax.swing.JTextField txtNomForm;
    private javax.swing.JTextField txtNomStag;
    private javax.swing.JTextField txtPreStag;
    // End of variables declaration//GEN-END:variables
}
